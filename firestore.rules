rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isLoggedIn() {
      return request.auth != null;
    }
    function isMe(userID) {
      return isLoggedIn() && request.auth.uid == userID;
    }

    match /users/{userID} {
      allow write: if isMe(userID)
      						 && request.resource.data.size() == 9
                   && request.resource.data.keys().hasAll(["twitterAccessToken", "twitterAccessTokenSecret", "twitterId", "currentWatchesId", "displayName", "lastUpdated", "newUser", "nextCursor", "photoUrl"])
                   && request.resource.data.twitterAccessToken is string
                   && request.resource.data.twitterAccessTokenSecret is string
                   && request.resource.data.twitterId is string
                   && request.resource.data.currentWatchesId == resource.data.currentWatchesId
                   && request.resource.data.displayName == resource.data.displayName
                   && request.resource.data.lastUpdated == resource.data.lastUpdated
                   && request.resource.data.newUser == resource.data.newUser
                   && request.resource.data.nextCursor == resource.data.nextCursor
                   && request.resource.data.photoUrl == resource.data.photoUrl;
      allow read: if false;

      match /records/{recordID} {
        allow write: if false;
        allow read: if isMe(userID);
      }

      match /watches/{watchID} {
        allow write, read: if false;
      }
    }
  }
}
